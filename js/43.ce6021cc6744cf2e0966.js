"use strict";(self.webpackChunkbabylonjs_typescript_webpack_template=self.webpackChunkbabylonjs_typescript_webpack_template||[]).push([[43],{9043:(t,e,a)=>{a.r(e),a.d(e,{_HDRTextureLoader:()=>s});var r=a(4983);class n{static ConvertPanoramaToCubemap(t,e,a,r,n=!1){if(!t)throw"ConvertPanoramaToCubemap: input cannot be null";if(t.length!=e*a*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(r,this.FACE_FRONT,t,e,a,n),back:this.CreateCubemapTexture(r,this.FACE_BACK,t,e,a,n),left:this.CreateCubemapTexture(r,this.FACE_LEFT,t,e,a,n),right:this.CreateCubemapTexture(r,this.FACE_RIGHT,t,e,a,n),up:this.CreateCubemapTexture(r,this.FACE_UP,t,e,a,n),down:this.CreateCubemapTexture(r,this.FACE_DOWN,t,e,a,n),size:r,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(t,e,a,r,n,o=!1){const h=new ArrayBuffer(t*t*4*3),i=new Float32Array(h),s=o?Math.max(1,Math.round(r/4/t)):1,w=1/s,u=w*w,l=e[1].subtract(e[0]).scale(w/t),f=e[3].subtract(e[2]).scale(w/t),c=1/t;let d=0;for(let o=0;o<t;o++)for(let h=0;h<s;h++){let h=e[0],p=e[2];for(let e=0;e<t;e++)for(let w=0;w<s;w++){const s=p.subtract(h).scale(d).add(h);s.normalize();const w=this.CalcProjectionSpherical(s,a,r,n);i[o*t*3+3*e+0]+=w.r*u,i[o*t*3+3*e+1]+=w.g*u,i[o*t*3+3*e+2]+=w.b*u,h=h.add(l),p=p.add(f)}d+=c*w}return i}static CalcProjectionSpherical(t,e,a,r){let n=Math.atan2(t.z,t.x);const o=Math.acos(t.y);for(;n<-Math.PI;)n+=2*Math.PI;for(;n>Math.PI;)n-=2*Math.PI;let h=n/Math.PI;const i=o/Math.PI;h=.5*h+.5;let s=Math.round(h*a);s<0?s=0:s>=a&&(s=a-1);let w=Math.round(i*r);w<0?w=0:w>=r&&(w=r-1);const u=r-w-1;return{r:e[u*a*3+3*s+0],g:e[u*a*3+3*s+1],b:e[u*a*3+3*s+2]}}}function o(t,e,a,r,n,o){n>0?(n=function(t,e){return e>1023?1*Math.pow(2,1023)*Math.pow(2,e-1023):e<-1074?1*Math.pow(2,-1074)*Math.pow(2,e+1074):1*Math.pow(2,e)}(0,n-136),t[o+0]=e*n,t[o+1]=a*n,t[o+2]=r*n):(t[o+0]=0,t[o+1]=0,t[o+2]=0)}function h(t,e){let a="",r="";for(let n=e;n<t.length-e&&(r=String.fromCharCode(t[n]),"\n"!=r);n++)a+=r;return a}function i(t,e){let a=e.height;const r=e.width;let n,h,i,s,w,u=e.dataPosition;const l=new ArrayBuffer(e.width*e.height*4*3),f=new Float32Array(l);for(;a>0;){for(w=0;w<e.width;w++)n=t[u++],h=t[u++],i=t[u++],s=t[u++],o(f,n,h,i,s,(e.height-a)*r*3+3*w);a--}return f}n.FACE_LEFT=[new r.Pq(-1,-1,-1),new r.Pq(1,-1,-1),new r.Pq(-1,1,-1),new r.Pq(1,1,-1)],n.FACE_RIGHT=[new r.Pq(1,-1,1),new r.Pq(-1,-1,1),new r.Pq(1,1,1),new r.Pq(-1,1,1)],n.FACE_FRONT=[new r.Pq(1,-1,-1),new r.Pq(1,-1,1),new r.Pq(1,1,-1),new r.Pq(1,1,1)],n.FACE_BACK=[new r.Pq(-1,-1,1),new r.Pq(-1,-1,-1),new r.Pq(-1,1,1),new r.Pq(-1,1,-1)],n.FACE_DOWN=[new r.Pq(1,1,-1),new r.Pq(1,1,1),new r.Pq(-1,1,-1),new r.Pq(-1,1,1)],n.FACE_UP=[new r.Pq(-1,-1,-1),new r.Pq(-1,-1,1),new r.Pq(1,-1,-1),new r.Pq(1,-1,1)];class s{constructor(){this.supportCascades=!1}loadCubeData(){throw".hdr not supported in Cube."}loadData(t,e,a){const r=new Uint8Array(t.buffer,t.byteOffset,t.byteLength),n=function(t){let e=0,a=0,r=h(t,0);if("#"!=r[0]||"?"!=r[1])throw"Bad HDR Format.";let n=!1,o=!1,i=0;do{i+=r.length+1,r=h(t,i),"FORMAT=32-bit_rle_rgbe"==r?o=!0:0==r.length&&(n=!0)}while(!n);if(!o)throw"HDR Bad header format, unsupported FORMAT";i+=r.length+1,r=h(t,i);const s=/^-Y (.*) \+X (.*)$/g.exec(r);if(!s||s.length<3)throw"HDR Bad header format, no size";if(a=parseInt(s[2]),e=parseInt(s[1]),a<8||a>32767)throw"HDR Bad header format, unsupported size";return i+=r.length+1,{height:e,width:a,dataPosition:i}}(r),s=function(t,e){return function(t,e){let a=e.height;const r=e.width;let n,h,s,w,u,l=e.dataPosition,f=0,c=0,d=0;const p=new ArrayBuffer(4*r),C=new Uint8Array(p),P=new ArrayBuffer(e.width*e.height*4*3),b=new Float32Array(P);for(;a>0;){if(n=t[l++],h=t[l++],s=t[l++],w=t[l++],2!=n||2!=h||128&s||e.width<8||e.width>32767)return i(t,e);if((s<<8|w)!=r)throw"HDR Bad header format, wrong scan line width";for(f=0,d=0;d<4;d++)for(c=(d+1)*r;f<c;)if(n=t[l++],h=t[l++],n>128){if(u=n-128,0==u||u>c-f)throw"HDR Bad Format, bad scanline data (run)";for(;u-- >0;)C[f++]=h}else{if(u=n,0==u||u>c-f)throw"HDR Bad Format, bad scanline data (non-run)";if(C[f++]=h,--u>0)for(let e=0;e<u;e++)C[f++]=t[l++]}for(d=0;d<r;d++)n=C[d],h=C[d+r],s=C[d+2*r],w=C[d+3*r],o(b,n,h,s,w,(e.height-a)*r*3+3*d);a--}return b}(t,e)}(r,n),w=n.width*n.height,u=new Float32Array(4*w);for(let t=0;t<w;t+=1)u[4*t]=s[3*t],u[4*t+1]=s[3*t+1],u[4*t+2]=s[3*t+2],u[4*t+3]=1;a(n.width,n.height,e.generateMipMaps,!1,(()=>{const t=e.getEngine();e.type=1,e.format=5,e._gammaSpace=!1,t._uploadDataToTextureDirectly(e,u)}))}}}}]);
//# sourceMappingURL=43.ce6021cc6744cf2e0966.js.map