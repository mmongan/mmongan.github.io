"use strict";(self.webpackChunkbabylonjs_typescript_webpack_template=self.webpackChunkbabylonjs_typescript_webpack_template||[]).push([[551],{932:(e,n,t)=>{t.r(n),t.d(n,{kernelBlurVertexShaderWGSL:()=>u});var r=t(3862);t(8843);const a="kernelBlurVertex";r.l.IncludesShadersStoreWGSL[a]||(r.l.IncludesShadersStoreWGSL[a]="vertexOutputs.sampleCoord{X}=vertexOutputs.sampleCenter+uniforms.delta*KERNEL_OFFSET{X};");const s="kernelBlurVertexShader",l="attribute position: vec2f;uniform delta: vec2f;varying sampleCenter: vec2f;\n#include<kernelBlurVaryingDeclaration>[0..varyingCount]\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {const madd: vec2f= vec2f(0.5,0.5);\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.sampleCenter=(input.position*madd+madd);\n#include<kernelBlurVertex>[0..varyingCount]\nvertexOutputs.position= vec4f(input.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}";r.l.ShadersStoreWGSL[s]||(r.l.ShadersStoreWGSL[s]=l);const u={name:s,shader:l}},8843:(e,n,t)=>{var r=t(3862);const a="kernelBlurVaryingDeclaration";r.l.IncludesShadersStoreWGSL[a]||(r.l.IncludesShadersStoreWGSL[a]="varying sampleCoord{X}: vec2f;")}}]);
//# sourceMappingURL=551.1c3977789831f2285c75.js.map