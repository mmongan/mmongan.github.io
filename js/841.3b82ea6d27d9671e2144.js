"use strict";(self.webpackChunkbabylonjs_typescript_webpack_template=self.webpackChunkbabylonjs_typescript_webpack_template||[]).push([[841],{7841:(t,e,a)=>{a.r(e),a.d(e,{_TGATextureLoader:()=>s});var r=a(461);function n(t){let e=0;return{id_length:t[e++],colormap_type:t[e++],image_type:t[e++],colormap_index:t[e++]|t[e++]<<8,colormap_length:t[e++]|t[e++]<<8,colormap_size:t[e++],origin:[t[e++]|t[e++]<<8,t[e++]|t[e++]<<8],width:t[e++]|t[e++]<<8,height:t[e++]|t[e++]<<8,pixel_size:t[e++],flags:t[e++]}}function i(t,e){if(e.length<19)return void r.V.Error("Unable to load TGA file - Not enough data to contain header");let a=18;const i=n(e);if(i.id_length+a>e.length)return void r.V.Error("Unable to load TGA file - Not enough data");a+=i.id_length;let s,h=!1,c=!1,l=!1;switch(i.image_type){case 9:h=!0;case 1:c=!0;break;case 10:h=!0;case 2:break;case 11:h=!0;case 3:l=!0}const g=i.pixel_size>>3,f=i.width*i.height*g;let d,u,p,w,b,_,y;if(c&&(d=e.subarray(a,a+=i.colormap_length*(i.colormap_size>>3))),h){let t,r,n;s=new Uint8Array(f);let i=0;const o=new Uint8Array(g);for(;a<f&&i<f;)if(t=e[a++],r=1+(127&t),128&t){for(n=0;n<g;++n)o[n]=e[a++];for(n=0;n<r;++n)s.set(o,i+n*g);i+=g*r}else{for(r*=g,n=0;n<r;++n)s[i+n]=e[a++];i+=r}}else s=e.subarray(a,a+=c?i.width*i.height:f);switch((48&i.flags)>>4){default:case 2:u=0,w=1,y=i.width,p=0,b=1,_=i.height;break;case 0:u=0,w=1,y=i.width,p=i.height-1,b=-1,_=-1;break;case 3:u=i.width-1,w=-1,y=-1,p=0,b=1,_=i.height;break;case 1:u=i.width-1,w=-1,y=-1,p=i.height-1,b=-1,_=-1}const m="_getImageData"+(l?"Grey":"")+i.pixel_size+"bits",A=o[m](i,d,s,p,b,_,u,w,y);t.getEngine()._uploadDataToTextureDirectly(t,A)}const o={GetTGAHeader:n,UploadContent:i,_getImageData8bits:function(t,e,a,r,n,i,o,s,h){const c=a,l=e,g=t.width,f=t.height;let d,u,p,w=0;const b=new Uint8Array(g*f*4);for(p=r;p!==i;p+=n)for(u=o;u!==h;u+=s,w++)d=c[w],b[4*(u+g*p)+3]=255,b[4*(u+g*p)+2]=l[3*d+0],b[4*(u+g*p)+1]=l[3*d+1],b[4*(u+g*p)+0]=l[3*d+2];return b},_getImageData16bits:function(t,e,a,r,n,i,o,s,h){const c=a,l=t.width,g=t.height;let f,d,u,p=0;const w=new Uint8Array(l*g*4);for(u=r;u!==i;u+=n)for(d=o;d!==h;d+=s,p+=2){f=c[p+0]+(c[p+1]<<8);const t=255*((31744&f)>>10)/31|0,e=255*((992&f)>>5)/31|0,a=255*(31&f)/31|0;w[4*(d+l*u)+0]=t,w[4*(d+l*u)+1]=e,w[4*(d+l*u)+2]=a,w[4*(d+l*u)+3]=32768&f?0:255}return w},_getImageData24bits:function(t,e,a,r,n,i,o,s,h){const c=a,l=t.width,g=t.height;let f,d,u=0;const p=new Uint8Array(l*g*4);for(d=r;d!==i;d+=n)for(f=o;f!==h;f+=s,u+=3)p[4*(f+l*d)+3]=255,p[4*(f+l*d)+2]=c[u+0],p[4*(f+l*d)+1]=c[u+1],p[4*(f+l*d)+0]=c[u+2];return p},_getImageData32bits:function(t,e,a,r,n,i,o,s,h){const c=a,l=t.width,g=t.height;let f,d,u=0;const p=new Uint8Array(l*g*4);for(d=r;d!==i;d+=n)for(f=o;f!==h;f+=s,u+=4)p[4*(f+l*d)+2]=c[u+0],p[4*(f+l*d)+1]=c[u+1],p[4*(f+l*d)+0]=c[u+2],p[4*(f+l*d)+3]=c[u+3];return p},_getImageDataGrey8bits:function(t,e,a,r,n,i,o,s,h){const c=a,l=t.width,g=t.height;let f,d,u,p=0;const w=new Uint8Array(l*g*4);for(u=r;u!==i;u+=n)for(d=o;d!==h;d+=s,p++)f=c[p],w[4*(d+l*u)+0]=f,w[4*(d+l*u)+1]=f,w[4*(d+l*u)+2]=f,w[4*(d+l*u)+3]=255;return w},_getImageDataGrey16bits:function(t,e,a,r,n,i,o,s,h){const c=a,l=t.width,g=t.height;let f,d,u=0;const p=new Uint8Array(l*g*4);for(d=r;d!==i;d+=n)for(f=o;f!==h;f+=s,u+=2)p[4*(f+l*d)+0]=c[u+0],p[4*(f+l*d)+1]=c[u+0],p[4*(f+l*d)+2]=c[u+0],p[4*(f+l*d)+3]=c[u+1];return p}};class s{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(t,e,a){const r=new Uint8Array(t.buffer,t.byteOffset,t.byteLength),o=n(r);a(o.width,o.height,e.generateMipMaps,!1,(()=>{i(e,r)}))}}}}]);
//# sourceMappingURL=841.3b82ea6d27d9671e2144.js.map