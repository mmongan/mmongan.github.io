{"version":3,"file":"js/535.12a6e0e0de1a770dcf2e.js","mappings":"4NAGA,MAAMA,EAAO,0BACPC,EAAS,8YAUV,IAAYC,iBAAiBF,KAC9B,IAAYE,iBAAiBF,GAAQC,GAGlC,MAAME,EAA8B,CAAEH,OAAMC,S","sources":["webpack://babylonjs-typescript-webpack-template/./dev/core/src/ShadersWGSL/postprocess.vertex.ts"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"postprocessVertexShader\";\nconst shader = `attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}\n`;\n// Sideeffect\nif (!ShaderStore.ShadersStoreWGSL[name]) {\n    ShaderStore.ShadersStoreWGSL[name] = shader;\n}\n/** @internal */\nexport const postprocessVertexShaderWGSL = { name, shader };\n"],"names":["name","shader","ShadersStoreWGSL","postprocessVertexShaderWGSL"],"sourceRoot":""}