{"version":3,"file":"js/551.1c3977789831f2285c75.js","mappings":"mOAGA,MAAM,EAAO,mBAGR,IAAYA,yBAAyB,KACtC,IAAYA,yBAAyB,GAH1B,4FAMR,MCLD,EAAO,yBACP,EAAS,weAYV,IAAYC,iBAAiB,KAC9B,IAAYA,iBAAiB,GAAQ,GAGlC,MAAMC,EAA6B,CAAEC,KAAI,EAAEC,OAAM,E,+BCnBxD,MAAMD,EAAO,+BAGR,IAAYH,yBAAyBG,KACtC,IAAYH,yBAAyBG,GAH1B,iC","sources":["webpack://babylonjs-typescript-webpack-template/./dev/core/src/ShadersWGSL/ShadersInclude/kernelBlurVertex.ts","webpack://babylonjs-typescript-webpack-template/./dev/core/src/ShadersWGSL/kernelBlur.vertex.ts","webpack://babylonjs-typescript-webpack-template/./dev/core/src/ShadersWGSL/ShadersInclude/kernelBlurVaryingDeclaration.ts"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"kernelBlurVertex\";\nconst shader = `vertexOutputs.sampleCoord{X}=vertexOutputs.sampleCenter+uniforms.delta*KERNEL_OFFSET{X};`;\n// Sideeffect\nif (!ShaderStore.IncludesShadersStoreWGSL[name]) {\n    ShaderStore.IncludesShadersStoreWGSL[name] = shader;\n}\n/** @internal */\nexport const kernelBlurVertexWGSL = { name, shader };\n","// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\nimport \"./ShadersInclude/kernelBlurVaryingDeclaration\";\nimport \"./ShadersInclude/kernelBlurVertex\";\n\nconst name = \"kernelBlurVertexShader\";\nconst shader = `attribute position: vec2f;uniform delta: vec2f;varying sampleCenter: vec2f;\n#include<kernelBlurVaryingDeclaration>[0..varyingCount]\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {const madd: vec2f= vec2f(0.5,0.5);\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.sampleCenter=(input.position*madd+madd);\n#include<kernelBlurVertex>[0..varyingCount]\nvertexOutputs.position= vec4f(input.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}`;\n// Sideeffect\nif (!ShaderStore.ShadersStoreWGSL[name]) {\n    ShaderStore.ShadersStoreWGSL[name] = shader;\n}\n/** @internal */\nexport const kernelBlurVertexShaderWGSL = { name, shader };\n","// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"kernelBlurVaryingDeclaration\";\nconst shader = `varying sampleCoord{X}: vec2f;`;\n// Sideeffect\nif (!ShaderStore.IncludesShadersStoreWGSL[name]) {\n    ShaderStore.IncludesShadersStoreWGSL[name] = shader;\n}\n/** @internal */\nexport const kernelBlurVaryingDeclarationWGSL = { name, shader };\n"],"names":["IncludesShadersStoreWGSL","ShadersStoreWGSL","kernelBlurVertexShaderWGSL","name","shader"],"sourceRoot":""}