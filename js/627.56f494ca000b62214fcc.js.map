{"version":3,"file":"js/627.56f494ca000b62214fcc.js","mappings":"gOAGA,MAAM,EAAO,mBAGR,IAAYA,qBAAqB,KAClC,IAAYA,qBAAqB,GAHtB,uDAMR,MCLD,EAAO,yBACP,EAAS,kZAYV,IAAYC,aAAa,KAC1B,IAAYA,aAAa,GAAQ,GAG9B,MAAMC,EAAyB,CAAEC,KAAI,EAAEC,OAAM,E,+BCnBpD,MAAMD,EAAO,+BAGR,IAAYH,qBAAqBG,KAClC,IAAYH,qBAAqBG,GAHtB,+B","sources":["webpack://babylonjs-typescript-webpack-template/./dev/core/src/Shaders/ShadersInclude/kernelBlurVertex.ts","webpack://babylonjs-typescript-webpack-template/./dev/core/src/Shaders/kernelBlur.vertex.ts","webpack://babylonjs-typescript-webpack-template/./dev/core/src/Shaders/ShadersInclude/kernelBlurVaryingDeclaration.ts"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"kernelBlurVertex\";\nconst shader = `sampleCoord{X}=sampleCenter+delta*KERNEL_OFFSET{X};`;\n// Sideeffect\nif (!ShaderStore.IncludesShadersStore[name]) {\n    ShaderStore.IncludesShadersStore[name] = shader;\n}\n/** @internal */\nexport const kernelBlurVertex = { name, shader };\n","// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\nimport \"./ShadersInclude/kernelBlurVaryingDeclaration\";\nimport \"./ShadersInclude/kernelBlurVertex\";\n\nconst name = \"kernelBlurVertexShader\";\nconst shader = `attribute vec2 position;uniform vec2 delta;varying vec2 sampleCenter;\n#include<kernelBlurVaryingDeclaration>[0..varyingCount]\nconst vec2 madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nsampleCenter=(position*madd+madd);\n#include<kernelBlurVertex>[0..varyingCount]\ngl_Position=vec4(position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}`;\n// Sideeffect\nif (!ShaderStore.ShadersStore[name]) {\n    ShaderStore.ShadersStore[name] = shader;\n}\n/** @internal */\nexport const kernelBlurVertexShader = { name, shader };\n","// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"kernelBlurVaryingDeclaration\";\nconst shader = `varying vec2 sampleCoord{X};`;\n// Sideeffect\nif (!ShaderStore.IncludesShadersStore[name]) {\n    ShaderStore.IncludesShadersStore[name] = shader;\n}\n/** @internal */\nexport const kernelBlurVaryingDeclaration = { name, shader };\n"],"names":["IncludesShadersStore","ShadersStore","kernelBlurVertexShader","name","shader"],"sourceRoot":""}